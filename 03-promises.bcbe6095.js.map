{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IApCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAMC,iBACN,IAAqCC,EAkCvC,SAA6BF,GAC3B,IAAIX,EAAQc,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OACzCC,EAAYJ,OAAOH,EAAMI,OAAOC,SAASG,KAAKF,OAC9CG,EAASN,OAAOH,EAAMI,OAAOC,SAASI,OAAOH,OAEnD,MAAO,CAAEjB,QAAOkB,YAAWE,S,CAvCUC,CAAoBV,GAAjDW,EAA6BT,EAA7Bb,MAAOkB,EAAsBL,EAAtBK,UAAWE,EAAWP,EAAXO,OACtBG,EAAcD,EAElBX,EAAMa,cAAcC,QAEpB,IAAK,IAAIC,EAAW,EAAGA,GAAYN,EAAQM,GAAY,EACrD5B,EAAc4B,EAAUH,GACrBI,MAAK,SAAAC,G,IAuCqBC,EAvClB9B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAuCQ6B,EArCvB,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OAsC/C+B,EAAAnC,GAASoC,OAAOC,QAAQJ,E,IAnC1BK,OAAM,SAAAN,G,IA8BiBC,EA9Bd9B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MA8BI6B,EA7BD,sBAAqCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OA8B/D+B,EAAAnC,GAASoC,OAAOG,QAAQN,E,IA3B7BN,GAAeL,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, stepDelay, amount } = valueOfFormElements(event);\n  let targetDelay = delay;\n\n  event.currentTarget.reset();\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, targetDelay)\n      .then(({ position, delay }) => {\n        successfulPromisMessage(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        failurePromisMessage(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n\n    targetDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction valueOfFormElements(event) {\n  let delay = Number(event.target.elements.delay.value);\n  const stepDelay = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  return { delay, stepDelay, amount };\n}\n\nfunction failurePromisMessage(message) {\n  return Notiflix.Notify.failure(message);\n}\n\nfunction successfulPromisMessage(message) {\n  return Notiflix.Notify.success(message);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","ref","Number","target","elements","value","stepDelay","step","amount","$ce04d3a99e08e73b$var$valueOfFormElements","delay1","targetDelay","currentTarget","reset","position1","then","param","message","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.bcbe6095.js.map"}