{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkBC,G,mBAoBlB,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAxBHQ,CAAcT,EAAUC,GACrBS,MAAK,WAuCZ,IAAiCC,IArCvB,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OAsC/CY,EAAAnB,GAASoB,OAAOC,QAAQJ,E,IAnC1BK,OAAM,WA8Bb,IAA8BL,IA7BD,sBAAqCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,OA8B/DY,EAAAnB,GAASoB,OAAOG,QAAQN,E,IA3B7BV,GAASiB,C,EAfXnB,EAAMoB,iBACN,IAAmCC,EAgCrC,SAA6BrB,GAC3B,IAAIE,EAAQoB,OAAOtB,EAAMuB,OAAOC,SAAStB,MAAMuB,OACzCN,EAAYG,OAAOtB,EAAMuB,OAAOC,SAASE,KAAKD,OAC9CE,EAASL,OAAOtB,EAAMuB,OAAOC,SAASG,OAAOF,OAEnD,MAAO,CAAEvB,QAAOiB,YAAWQ,S,CArCQC,CAAoB5B,GAAjDE,EAA6BmB,EAA7BnB,MAAOiB,EAAsBE,EAAtBF,UAAWQ,EAAWN,EAAXM,OACxB3B,EAAM6B,cAAcC,QAEpB,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let { delay, stepDelay, amount } = valueOfFormElements(event);\n  event.currentTarget.reset();\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(() => {\n        successfulPromisMessage(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(() => {\n        failurePromisMessage(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n\n    delay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction valueOfFormElements(event) {\n  let delay = Number(event.target.elements.delay.value);\n  const stepDelay = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  return { delay, stepDelay, amount };\n}\n\nfunction failurePromisMessage(message) {\n  return Notiflix.Notify.failure(message);\n}\n\nfunction successfulPromisMessage(message) {\n  return Notiflix.Notify.success(message);\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","event","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","message","concat","$parcel$interopDefault","Notify","success","catch","failure","stepDelay","preventDefault","ref","Number","target","elements","value","step","amount","$ce04d3a99e08e73b$var$valueOfFormElements","currentTarget","reset","position1","_loop"],"version":3,"file":"03-promises.d43307ab.js.map"}