{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAYP,SAASQ,EAAqBC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACxC,OAAOU,EAAAd,GAASe,OAAOC,QACrB,sBAAuCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,O,CAIjD,SAASc,EAAwBL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3C,OAAOU,EAAAd,GAASe,OAAOI,QACrB,uBAAsCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,O,CAlDhCgB,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAMC,iBACN,IAAqCC,EA4BvC,SAA6BF,GAC3B,IAAInB,EAAQsB,OAAOH,EAAMI,OAAOC,SAASxB,MAAMyB,OACzCC,EAAYJ,OAAOH,EAAMI,OAAOC,SAASG,KAAKF,OAC9CG,EAASN,OAAOH,EAAMI,OAAOC,SAASI,OAAOH,OAEnD,MAAO,CAAEzB,QAAO0B,YAAWE,S,CAjCUC,CAAoBV,GAAjDnB,EAA6BqB,EAA7BrB,MAAO0B,EAAsBL,EAAtBK,UAAWE,EAAWP,EAAXO,OACtBE,EAAc9B,EAElBmB,EAAMY,cAAcC,QAEpB,IAAK,IAAIjC,EAAW,EAAGA,GAAY6B,EAAQ7B,GAAY,EACrDD,EAAcC,EAAU+B,GACrBG,KAAKnB,GACLoB,MAAM1B,GAETsB,GAAeJ,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, stepDelay, amount } = valueOfFormElements(event);\n  let targetDelay = delay;\n\n  event.currentTarget.reset();\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, targetDelay)\n      .then(successfulPromisMessage)\n      .catch(failurePromisMessage);\n\n    targetDelay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction valueOfFormElements(event) {\n  let delay = Number(event.target.elements.delay.value);\n  const stepDelay = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  return { delay, stepDelay, amount };\n}\n\nfunction failurePromisMessage({ position, delay }) {\n  return Notiflix.Notify.failure(\n    `❌ Rejected promise ${position} in ${delay} ms`\n  );\n}\n\nfunction successfulPromisMessage({ position, delay }) {\n  return Notiflix.Notify.success(\n    `✅ Fulfilled promise ${position} in ${delay} ms`\n  );\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$failurePromisMessage","param","$parcel$interopDefault","Notify","failure","concat","$ce04d3a99e08e73b$var$successfulPromisMessage","success","document","querySelector","addEventListener","event","preventDefault","ref","Number","target","elements","value","stepDelay","step","amount","$ce04d3a99e08e73b$var$valueOfFormElements","targetDelay","currentTarget","reset","then","catch"],"version":3,"file":"03-promises.a32ec4a6.js.map"}